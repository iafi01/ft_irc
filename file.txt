c++    -c -o srcs/Server.o srcs/Server.cpp
srcs/Server.cpp:40:57: error: invalid operands to binary expression ('std::__1::basic_string<char>' and 'int')
                ban_cmd(client, channel_name, users, topicConvert(*it + 4));
                                                                  ~~~ ^ ~
^
^
^
    ^
^
^
^
^
srcs/Server.cpp:317:53: warning: more '%' conversions than data arguments [-Wformat]
                                                sprintf(this->server_buffer, "server: client %d just left\n");
                                                                                             ~^
srcs/Server.cpp:318:14: error: cannot take the address of an rvalue of type 'Client *'
                                                delete &getClient(fd);
                                                       ^~~~~~~~~~~~~~
srcs/Server.cpp:392:14: error: out-of-line definition of 'send_all' does not match any declaration in 'Server'
void Server::send_all(std::string mex, Client *sender)          /**** Da rivedere ****/
             ^~~~~~~~
srcs/../includes/Server.hpp:72:40: note: type of 2nd parameter of member declaration does not match definition ('Client' vs 'Client *')
        void send_all(std::string mex, Client sender); //Sends a message to every connected clients
                                       ^
srcs/Server.cpp:397:17: error: comparison of distinct pointer types ('std::__1::__vector_base<Client *, std::__1::allocator<Client *> >::value_type' (aka 'Client *') and 'Client **')
                if(clients[i] != &sender && FD_ISSET(clients[i]->getFd(), &write_fds))
                   ~~~~~~~~~~ ^  ~~~~~~~
srcs/Server.cpp:469:26: error: no viable conversion from 'std::vector<std::string>' (aka 'vector<basic_string<char, char_traits<char>, allocator<char> > >') to 'std::string' (aka 'basic_string<char, char_traits<char>, allocator<char> >')
                topic_cmd(splitted[1], splitted, client);  //topicConvert non va bene, mandiamogli la splitted direttamente, poi in topic_cmd estrapoliamo il messaggio
                                       ^~~~~~~~
    basic_string(const basic_string& __str);
    ^
    basic_string(const _CharT* __s) {
    ^
srcs/../includes/Server.hpp:101:62: note: passing argument to parameter 'topic' here
        void topic_cmd(std::string channel_name, std::string topic, Client *sender);
                                                             ^
                        if (client->getNick() == channel_clients[l]->getNick())
                                                 ~~~~~~~~~~~~~~~^~
                                              ^
                                              ^
srcs/Server.cpp:533:19: error: no viable conversion from 'Client *' to 'Client'
                                send_all(msg, client);
                                              ^~~~~~
srcs/../includes/Client.hpp:26:9: note: candidate constructor not viable: no known conversion from 'Client *' to 'const Client &' for 1st argument; dereference the argument with *
        Client(const Client &obj);
        ^
srcs/../includes/Client.hpp:25:9: note: candidate constructor not viable: no known conversion from 'Client *' to 'int' for 1st argument
        Client(int fd);
        ^
srcs/../includes/Server.hpp:72:47: note: passing argument to parameter 'sender' here
        void send_all(std::string mex, Client sender); //Sends a message to every connected clients
                                              ^
srcs/Server.cpp:545:10: error: no matching member function for call to 'erase'
        clients.erase(fd);              //Serve la posizione nel vettore, non l'fd
        ~~~~~~~~^~~~~
    _LIBCPP_INLINE_VISIBILITY iterator erase(const_iterator __position);
                                       ^
    iterator erase(const_iterator __first, const_iterator __last);
             ^
                msg += mex[msgIt] + " ";                                                                        //Gli rompe le palle sto msgIt
                       ~~~^~~~~~
                                              ^
                                              ^
                        send(clients[iter]->getFd(), msg.c_str(), msg.length(), 0);
                             ~~~~~~~^~~~~
                                              ^
                                              ^
srcs/Server.cpp:583:36: error: no viable conversion from '__map_iterator<__tree_iterator<__value_type<std::__1::basic_string<char>, [...]>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Channel *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Channel *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Channel *> > >::__node_pointer, [...]>>' to '__map_iterator<__tree_iterator<__value_type<int, [...]>, std::__1::__tree<std::__1::__value_type<int, Channel *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, Channel *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, Channel *> > >::__node_pointer, [...]>>'
        std::map<int, Channel*>::iterator iter = channel_map.begin();
                                          ^      ~~~~~~~~~~~~~~~~~~~
class _LIBCPP_TEMPLATE_VIS __map_iterator
                           ^
    __map_iterator(_TreeIterator __i) _NOEXCEPT : __i_(__i) {}
    ^
srcs/Server.cpp:617:86: error: missing default argument on parameter 'sender'
void Server::topic_cmd(std::string channel_name, std::string topic = "", std::string sender)
                                                                                     ^
srcs/Server.cpp:617:14: error: out-of-line definition of 'topic_cmd' does not match any declaration in 'Server'
void Server::topic_cmd(std::string channel_name, std::string topic = "", std::string sender)
             ^~~~~~~~~
srcs/Server.cpp:626:3: error: void function 'topic_cmd' should not return a value [-Wreturn-type]
                return true;
                ^      ~~~~
srcs/Server.cpp:629:3: error: void function 'topic_cmd' should not return a value [-Wreturn-type]
                return true;
                ^      ~~~~
srcs/Server.cpp:630:5: error: void function 'topic_cmd' should not return a value [-Wreturn-type]
    return false;
    ^      ~~~~~
srcs/Server.cpp:633:111: error: missing default argument on parameter 'sender'
void Server::kick_cmd(std::string channel_name, std::string client_name, std::string reason = "", std::string sender)
                                                                                                              ^
srcs/Server.cpp:633:14: error: out-of-line definition of 'kick_cmd' does not match any declaration in 'Server'
void Server::kick_cmd(std::string channel_name, std::string client_name, std::string reason = "", std::string sender)
             ^~~~~~~~
srcs/Server.cpp:639:17: error: member reference type 'std::__1::__vector_base<Client *, std::__1::allocator<Client *> >::value_type' (aka 'Client *') is a pointer; did you mean to use '->'?
                if (clients[i].getNick() == client_name)
                    ~~~~~~~~~~^
                              ->
fatal error: too many errors emitted, stopping now [-ferror-limit=]
1 warning and 20 errors generated.
make: *** [srcs/Server.o] Error 1
